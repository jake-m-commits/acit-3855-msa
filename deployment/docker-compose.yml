version: '3.3'
services:
    zookeeper:
        image: wurstmeister/zookeeper
        ports:
            - "2181"
        hostname: zookeeper
    kafka:
        image: wurstmeister/kafka
        command: [start-kafka.sh]
        ports:
            - "9092:9092"
        hostname: kafka
        environment:
            KAFKA_CREATE_TOPICS: "events:1:1" # topic:partition:replicas
            KAFKA_ADVERTISED_HOST_NAME: acit-3855-kafka.jake-m-commits.link
            KAFKA_LISTENERS: INSIDE://:29092,OUTSIDE://:9092
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://acit-3855-kafka.jake-m-commits.link:9092
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        depends_on:
            - "zookeeper"
    db:
        image: mysql:5.7
        restart: always
        environment:
            MYSQL_DATABASE: 'events'
            # MYSQL_USER: 'root'
            MYSQL_PASSWORD: ''
            MYSQL_ROOT_PASSWORD: ''
        ports:
            # <Port exposed> : < MySQL Port running inside container>
            - '3306:3306'
        expose:
            # Opens port 3306 on the container
            - '3306'
        # Where data will be persisted
        volumes:
            - my-db:/var/lib/mysql
    receiver:
      image: receiver:latest
      ports:
        - "8080:8080"
      depends_on:
        - "kafka"
    storage:
      image: storage:latest
      ports:
        - "8090:8090"
      depends_on:
        - "kafka"
        - "db"
    processing:
      image: processing:latest
      ports:
        - "8100:8100"
      network_mode: "host"
      depends_on:
        - "storage"
    audit:
      image: audit:latest
      ports:
        - "8088:8088"
      depends_on:
        - "kafka"
volumes:
    my-db:
